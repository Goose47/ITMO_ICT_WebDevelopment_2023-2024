{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0430\u0439\u0442\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Vue.js \u0426\u0435\u043b\u044c: \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 vue.jss \u0422\u0435\u043a\u0441\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u041c\u0443\u0437\u044b\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u043b\u0435\u0435\u0440 \u0425\u043e\u0434 \u0440\u0430\u0431\u043e\u0442\u044b \u0412 \u0440\u0430\u0431\u043e\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0441\u044f vue-router \u0434\u043b\u044f \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0438\u0437\u0430\u0446\u0438\u0438: @/router/routes.js import HomePage from \"../views/HomePage.vue\"; import ProfilePage from \"../views/ProfilePage.vue\"; import SearchPage from \"../views/SearchPage.vue\"; import LoginPage from \"../views/auth/LoginPage.vue\"; import RegisterPage from \"../views/auth/RegisterPage.vue\"; import NotFoundPage from \"../views/NotFoundPage.vue\"; import SecureComponent from \"../components/SecureComponent.vue\"; import PublicComponent from \"../components/PublicComponent.vue\"; export default [ { path: '', meta: { requiresAuth: true }, component: SecureComponent, children: [ { path: '', name: 'home', component: HomePage }, { path: '/profile', name: 'profile', component: ProfilePage }, { path: '/search', name: 'search', component: SearchPage }, ], }, { path: '', meta: { blockedForAuthenticated: true }, component: PublicComponent, children: [ { path: '/login', name: 'login', component: LoginPage, }, { path: '/register', name: 'register', component: RegisterPage, }, ], }, { name: '404', path: '/:catchAll(.*)', component: NotFoundPage } ] @/router/index.js import { createRouter, createWebHistory } from 'vue-router' import routes from './routes.js' import useAuthStore from \"../pinia/auth\"; const router = createRouter({ history: createWebHistory(import.meta.env.BASE_URL), routes: routes, }) router.beforeEach(async (to, from) => { let user let authStore = useAuthStore() user = await authStore.getUser() if(to.meta.requiresAuth && !user) { return { name: 'login' } } if(to.meta.blockedForAuthenticated && user) { return { name: 'home' } } }) export default router \u041f\u0435\u0440\u0435\u0434 \u0440\u0435\u043d\u0434\u0435\u0440\u043e\u043c \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0440\u043e\u0443\u0442\u0435\u0440 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d \u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c, \u0438 \u0440\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u0442 \u0438\u043b\u0438 \u0431\u043b\u043e\u043a\u0438\u0440\u0443\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u043d\u044b\u043c \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430\u043c \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e. \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440\u0430 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f pinia. \u0412\u0441\u0435\u0433\u043e \u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u0434\u0432\u0430 store\u2019a \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u0440\u043e\u0438\u0433\u0440\u044b\u0432\u0430\u0435\u043c\u044b\u043c\u0438 \u0442\u0440\u0435\u043a\u0430\u043c\u0438 \u0438 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0435\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f @/pinia/auth.js import { defineStore } from 'pinia' import router from \"../router\"; import http from \"../services/httpClient\"; const useAuthStore = defineStore('auth', { state: () => ({ user: null, }), getters: { isAuthenticated() { return this.user !== null }, }, actions: { setUser(user) { this.user = user }, register(user) { http.post( 'register', {...user}, ).then(res => { router.push({name: 'login'}) }).catch(e => { // }) }, login(user) { http.post( 'login', {...user} ).then(res => { router.push({name: 'home'}) }).catch(err => { // }) }, logout() { http.post( 'logout', ).then(res => { this.$reset() router.push({name: 'login'}) }) }, async getUser() { if (!this.user) { let user try { user = (await http.get('me')).data } catch (e) { user = null } this.user = user } return this.user }, }, persist: true, }) export default useAuthStore @/pinia/player.js import { defineStore } from 'pinia' const usePlayerStore = defineStore('player', { state: () => ({ currentSong: null, playlist: [], }), getters: { getCurrentSong() { return this.playlist[this.currentSong] }, }, actions: { setCurrentSong(song) { this.playlist = [song] this.currentSong = 0 }, addToPlaylist(song) { this.playlist.push(song) }, setCurrentPlaylist(playlist, play = true) { this.playlist = playlist if (play) { this.currentSong = 0 } }, playNextSong() { if (this.playlist.length > this.currentSong + 1) { this.currentSong += 1 } }, playPreviousSong() { if (this.currentSong > 0) { this.currentSong -= 1 } }, }, persist: true, }) export default usePlayerStore \u0414\u043b\u044f \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 pinia-plugin-persistedstate. \u0421\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c \u0441\u0435\u0441\u0441\u0438\u044e \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0438 \u043f\u0440\u043e\u0438\u0433\u0440\u044b\u0432\u0430\u0435\u043c\u044b\u0439 \u043f\u043b\u0435\u0439\u043b\u0438\u0441\u0442 \u043f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b. \u0414\u043b\u044f \u043e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u044f \u043a api \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0441\u044f axios: @/services/httpClient.js import axios from \"axios\" class HttpClient { get( url, params ) { return new Promise((resolve, reject) => { axios.get(url, {params: params}).then(res => { resolve(res.data) }).catch(e => { reject(e) }) }) } post( url, data ) { return new Promise((resolve, reject) => { axios.post(url, data).then(res => { resolve(res.data) }).catch(e => { reject(e) }) }) } } export default new HttpClient() \u0421\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u044b \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043b\u043e\u0433\u0438\u043d\u0430 \u0414\u043e\u043c\u0430\u0448\u043d\u044f\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e\u0438\u0441\u043a\u0430 \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u0440\u043e\u0444\u0438\u043b\u044f \u0417\u0430\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0412 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0431\u044b\u043b\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0430 vue.js, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0449\u0435\u0435 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0432 \u043f\u0440\u043e\u0448\u043b\u043e\u0439 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 API, \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u0438 \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u043d\u044f \u0430\u0443\u0434\u0438\u043e\u0434\u043e\u0440\u043e\u0436\u0435\u043a, \u0441 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c\u044e \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438, \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043e\u0440\u043e\u0436\u0435\u043a \u0432 \u043f\u043e\u043d\u0440\u0430\u0432\u0438\u0432\u0448\u0438\u0435\u0441\u044f, \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u043b\u0435\u0439\u043b\u0438\u0441\u0442\u043e\u0432","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0430\u0439\u0442\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Vue.js"},{"location":"#vuejs","text":"\u0426\u0435\u043b\u044c: \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 vue.jss","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0430\u0439\u0442\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Vue.js"},{"location":"#_1","text":"\u041c\u0443\u0437\u044b\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u043b\u0435\u0435\u0440","title":"\u0422\u0435\u043a\u0441\u0442 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"#_2","text":"\u0412 \u0440\u0430\u0431\u043e\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0441\u044f vue-router \u0434\u043b\u044f \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0438\u0437\u0430\u0446\u0438\u0438: @/router/routes.js import HomePage from \"../views/HomePage.vue\"; import ProfilePage from \"../views/ProfilePage.vue\"; import SearchPage from \"../views/SearchPage.vue\"; import LoginPage from \"../views/auth/LoginPage.vue\"; import RegisterPage from \"../views/auth/RegisterPage.vue\"; import NotFoundPage from \"../views/NotFoundPage.vue\"; import SecureComponent from \"../components/SecureComponent.vue\"; import PublicComponent from \"../components/PublicComponent.vue\"; export default [ { path: '', meta: { requiresAuth: true }, component: SecureComponent, children: [ { path: '', name: 'home', component: HomePage }, { path: '/profile', name: 'profile', component: ProfilePage }, { path: '/search', name: 'search', component: SearchPage }, ], }, { path: '', meta: { blockedForAuthenticated: true }, component: PublicComponent, children: [ { path: '/login', name: 'login', component: LoginPage, }, { path: '/register', name: 'register', component: RegisterPage, }, ], }, { name: '404', path: '/:catchAll(.*)', component: NotFoundPage } ] @/router/index.js import { createRouter, createWebHistory } from 'vue-router' import routes from './routes.js' import useAuthStore from \"../pinia/auth\"; const router = createRouter({ history: createWebHistory(import.meta.env.BASE_URL), routes: routes, }) router.beforeEach(async (to, from) => { let user let authStore = useAuthStore() user = await authStore.getUser() if(to.meta.requiresAuth && !user) { return { name: 'login' } } if(to.meta.blockedForAuthenticated && user) { return { name: 'home' } } }) export default router \u041f\u0435\u0440\u0435\u0434 \u0440\u0435\u043d\u0434\u0435\u0440\u043e\u043c \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0440\u043e\u0443\u0442\u0435\u0440 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d \u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c, \u0438 \u0440\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u0442 \u0438\u043b\u0438 \u0431\u043b\u043e\u043a\u0438\u0440\u0443\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u043d\u044b\u043c \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430\u043c \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e. \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440\u0430 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f pinia. \u0412\u0441\u0435\u0433\u043e \u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u0434\u0432\u0430 store\u2019a \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u0440\u043e\u0438\u0433\u0440\u044b\u0432\u0430\u0435\u043c\u044b\u043c\u0438 \u0442\u0440\u0435\u043a\u0430\u043c\u0438 \u0438 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0435\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f @/pinia/auth.js import { defineStore } from 'pinia' import router from \"../router\"; import http from \"../services/httpClient\"; const useAuthStore = defineStore('auth', { state: () => ({ user: null, }), getters: { isAuthenticated() { return this.user !== null }, }, actions: { setUser(user) { this.user = user }, register(user) { http.post( 'register', {...user}, ).then(res => { router.push({name: 'login'}) }).catch(e => { // }) }, login(user) { http.post( 'login', {...user} ).then(res => { router.push({name: 'home'}) }).catch(err => { // }) }, logout() { http.post( 'logout', ).then(res => { this.$reset() router.push({name: 'login'}) }) }, async getUser() { if (!this.user) { let user try { user = (await http.get('me')).data } catch (e) { user = null } this.user = user } return this.user }, }, persist: true, }) export default useAuthStore @/pinia/player.js import { defineStore } from 'pinia' const usePlayerStore = defineStore('player', { state: () => ({ currentSong: null, playlist: [], }), getters: { getCurrentSong() { return this.playlist[this.currentSong] }, }, actions: { setCurrentSong(song) { this.playlist = [song] this.currentSong = 0 }, addToPlaylist(song) { this.playlist.push(song) }, setCurrentPlaylist(playlist, play = true) { this.playlist = playlist if (play) { this.currentSong = 0 } }, playNextSong() { if (this.playlist.length > this.currentSong + 1) { this.currentSong += 1 } }, playPreviousSong() { if (this.currentSong > 0) { this.currentSong -= 1 } }, }, persist: true, }) export default usePlayerStore \u0414\u043b\u044f \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 pinia-plugin-persistedstate. \u0421\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c \u0441\u0435\u0441\u0441\u0438\u044e \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0438 \u043f\u0440\u043e\u0438\u0433\u0440\u044b\u0432\u0430\u0435\u043c\u044b\u0439 \u043f\u043b\u0435\u0439\u043b\u0438\u0441\u0442 \u043f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b. \u0414\u043b\u044f \u043e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u044f \u043a api \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0441\u044f axios: @/services/httpClient.js import axios from \"axios\" class HttpClient { get( url, params ) { return new Promise((resolve, reject) => { axios.get(url, {params: params}).then(res => { resolve(res.data) }).catch(e => { reject(e) }) }) } post( url, data ) { return new Promise((resolve, reject) => { axios.post(url, data).then(res => { resolve(res.data) }).catch(e => { reject(e) }) }) } } export default new HttpClient()","title":"\u0425\u043e\u0434 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"#_3","text":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043b\u043e\u0433\u0438\u043d\u0430 \u0414\u043e\u043c\u0430\u0448\u043d\u044f\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e\u0438\u0441\u043a\u0430 \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u0440\u043e\u0444\u0438\u043b\u044f","title":"\u0421\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u044b \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f"},{"location":"#_4","text":"\u0412 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0431\u044b\u043b\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0430 vue.js, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0449\u0435\u0435 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0432 \u043f\u0440\u043e\u0448\u043b\u043e\u0439 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 API, \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u0438 \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u043d\u044f \u0430\u0443\u0434\u0438\u043e\u0434\u043e\u0440\u043e\u0436\u0435\u043a, \u0441 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c\u044e \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438, \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043e\u0440\u043e\u0436\u0435\u043a \u0432 \u043f\u043e\u043d\u0440\u0430\u0432\u0438\u0432\u0448\u0438\u0435\u0441\u044f, \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u043b\u0435\u0439\u043b\u0438\u0441\u0442\u043e\u0432","title":"\u0417\u0430\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435"}]}